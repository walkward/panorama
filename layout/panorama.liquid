<!doctype html>
<html class="no-js">
<head>
    <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <link rel="alternate" href="https://www.sawderstudio.com" hreflang="en-us" />
    {% if settings.favicon != blank %}
      <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
    {% endif %}
    {% if page_description %}<meta name="description" content="{{ page_description | escape }}">{% endif %}
    {% include 'social-meta-tags' %}
    <link rel="canonical" href="{{ canonical_url }}">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="{{ settings.color_primary }}">

    {{ 'panorama.css' | asset_url | stylesheet_tag }}

    {{ '//ajax.googleapis.com/ajax/libs/jquery/2.2.3/jquery.min.js' | script_tag }}

    {{content_for_header}}

</head>

<body id="page-{{ page_title | handle }}" class="{% if customer %}customer-logged-in {% endif %}template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}" >

<wrapper class="panorama-wrapper">
  <a href="#" data-activates="slide-out" class="button-collapse menu-btn show-on-large"><svg style="width:24px;height:24px" viewBox="0 0 24 24"><path fill="#000000" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" /></svg></a>
  <a href="#" class="prev-scene-arrow"><svg style="width:24px;height:24px" viewBox="0 0 24 24"><path fill="#fff" d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" /></svg></a>
  <a href="#" class="next-scene-arrow"><svg style="width:24px;height:24px" viewBox="0 0 24 24"><path fill="#fff" d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" /></svg></a>
  <div id="panorama"></div>
</wrapper>

{{content_for_layout}}

<script type="text/javascript" src="{{ 'panorama.js' | asset_url }}"></script>

<script>
var panoOptions = {
    "default": {
        "firstScene": "{%- for link in linklists['styles'].links limit: 1 -%}{{- link.title | handleize -}}{% endfor %}",
        "autoLoad": true,
        //"hotSpotDebug": true,
        "sceneFadeDuration": 300
    },
    "scenes": {
        {%- for link in linklists['styles'].links -%}
        {%- assign link_handle = link.title | handleize -%}
        {%- assign collection = collections.[link_handle] -%}
        "{{- link_handle -}}": {
            "hfov": 120,
            "pitch": -3,
            "yaw": 117,
            "type": "equirectangular",
            "panorama": "{%- if collection.image -%}{{- collection.image.src | img_url: 'master', format: 'pjpg' | split:'?' | first -}}{%- endif -%}",
            "mobilePanorama": "{%- if collection.image -%}{{- collection.image.src | img_url: '2000x1000', format: 'pjpg' | split:'?' | first -}}{%- endif -%}",
            "hotSpots": [
                    {%- for product in collections.[link_handle].products -%}
                    {
                    {%- for field in product.metafields.c_f -%}
                    "{{- field | first -}}":{{- field | last -}},
                    {%- endfor -%}
                    "cssClass": "custom-hotspot",
                    "createTooltipFunc": hotspot,
                    "createTooltipArgs":  {
                      "title": "{{- product.title -}}",
                      "variantID": "{%- for variant in product.variants limit: 1 -%}{{- variant.id -}}{%- endfor -%}",
                      "image_src": "{{ product.featured_image.src | img_url: '150x150', crop: 'center' }}"
                      },
                      "clickHandlerFunc": hotspotClick,
                      "clickHandlerArgs": {
                        "variantID": "{%- for variant in product.variants limit: 1 -%}{{- variant.id -}}{%- endfor -%}"
                      },
                    }{%- unless forloop.last -%},{%- endunless -%}
                    {%- endfor -%}
            ]}{%- unless forloop.last -%},{%- endunless -%}
        {%- endfor -%}
    }
};
if(Math.max(document.documentElement.clientWidth, window.innerWidth || 0) < 768){
  var allScenes = panoOptions.scenes;
  for (var key in allScenes) {
    if (allScenes.hasOwnProperty(key)) {
      allScenes[key].panorama = allScenes[key].mobilePanorama;
      console.log(allScenes[key].panorama);
    }
  }
};
viewer = pannellum.viewer('panorama', panoOptions);
viewer.on("load", function(event) {
  var viewerConfig = viewer.getConfig();
  var imageSrcs = [];
  $.each(viewerConfig.scenes, function() {
      imageSrcs.push(this.panorama);
  });
  $.fn.preload = function() {
      this.each(function(){
          $('<img/>')[0].src = this;
      });
  }
  $(imageSrcs).preload( function(){
    viewer.off();
  });
});
</script>

<script type="text/javascript">
jQuery(function(){CartJS.init({{ cart | json }})});
</script>

</body>
</html>
